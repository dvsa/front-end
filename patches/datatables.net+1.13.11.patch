diff --git a/node_modules/datatables.net/js/jquery.dataTables.js b/node_modules/datatables.net/js/jquery.dataTables.js
index 3361ce6..8365947 100644
--- a/node_modules/datatables.net/js/jquery.dataTables.js
+++ b/node_modules/datatables.net/js/jquery.dataTables.js
@@ -1516,13 +1516,33 @@
 		return out;
 	};
 
+	const createDOMPurify = require('dompurify');
+	const { JSDOM } = require('jsdom');
+
+	const window = new JSDOM('').window;
+	const DOMPurify = createDOMPurify(window);
+
+// Escapes &, <, >, ", ', and \
+	function escapeSpecialChars(str) {
+		return str
+			.replace(/\\/g, '\\\\')   // backslash first
+			.replace(/&/g, '&amp;')
+			.replace(/</g, '&lt;')
+			.replace(/>/g, '&gt;')
+			.replace(/"/g, '&quot;')
+			.replace(/'/g, '&#x27;');
+	}
 
-	var _stripHtml = function ( d ) {
-		return d
-			.replace( _re_html, '' ) // Complete tags
-			.replace(/<script/i, ''); // Safety for incomplete script tag
-	};
+	var _stripHtml = function (d) {
+		if (typeof d !== 'string') return d;
 
+		const sanitized = DOMPurify.sanitize(d, {
+			ALLOWED_TAGS: [],
+			ALLOWED_ATTR: []
+		});
+
+		return escapeSpecialChars(sanitized);
+	};
 
 	/**
 	 * Determine if all values in the array are unique. This means we can short
diff --git a/node_modules/datatables.net/js/jquery.dataTables.mjs b/node_modules/datatables.net/js/jquery.dataTables.mjs
index 04bee9d..15200e8 100644
--- a/node_modules/datatables.net/js/jquery.dataTables.mjs
+++ b/node_modules/datatables.net/js/jquery.dataTables.mjs
@@ -1459,11 +1459,32 @@ var _removeEmpty = function ( a )
 	return out;
 };
 
+const createDOMPurify = require('dompurify');
+const { JSDOM } = require('jsdom');
+
+const window = new JSDOM('').window;
+const DOMPurify = createDOMPurify(window);
+
+// Escapes &, <, >, ", ', and \
+function escapeSpecialChars(str) {
+	return str
+		.replace(/\\/g, '\\\\')   // backslash first
+		.replace(/&/g, '&amp;')
+		.replace(/</g, '&lt;')
+		.replace(/>/g, '&gt;')
+		.replace(/"/g, '&quot;')
+		.replace(/'/g, '&#x27;');
+}
+
+var _stripHtml = function (d) {
+	if (typeof d !== 'string') return d;
+
+	const sanitized = DOMPurify.sanitize(d, {
+		ALLOWED_TAGS: [],
+		ALLOWED_ATTR: []
+	});
 
-var _stripHtml = function ( d ) {
-	return d
-		.replace( _re_html, '' ) // Complete tags
-		.replace(/<script/i, ''); // Safety for incomplete script tag
+	return escapeSpecialChars(sanitized);
 };
 
 
